{
  "name": "@boostercloud/metadata-booster",
  "version": "0.30.4",
  "description": "Emits detailed metadata of your types. You can then get it in runtime to deal with schema-aware operation, like defining GraphQL schemas, ORM operations, etc.",
  "repository": "https://github.com/boostercloud/booster.git",
  "keywords": [
    "metadata",
    "transformer",
    "booster",
    "reflect"
  ],
  "author": "Booster Cloud",
  "license": "Apache-2.0",
  "publishConfig": {
    "access": "public"
  },
  "bugs": {
    "url": "https://github.com/boostercloud/booster/issues"
  },
  "homepage": "https://github.com/boostercloud/booster#readme",
  "main": "dist/index.js",
  "files": [
    "dist"
  ],
  "dependencies": {
    "fp-ts": "2.12.2",
    "reflect-metadata": "0.1.13",
    "ts-morph": "15.1.0",
    "ts-pattern": "4.0.5",
    "tslib": "2.4.0",
    "winston": "3.8.1"
  },
  "devDependencies": {
    "@types/chai": "4.3.1",
    "@types/chai-as-promised": "7.1.5",
    "@types/mocha": "9.1.1",
    "@types/sinon": "10.0.13",
    "@types/sinon-chai": "3.2.8",
    "nyc": "15.1.0",
    "sinon": "14.0.0",
    "ttypescript": "1.5.13",
    "typescript": "4.7.4"
  },
  "scripts": {
    "lint:check": "eslint --ext '.js,.ts' **/*.ts",
    "lint:fix": "eslint --quiet --fix --ext '.js,.ts' **/*.ts",
    "compile": "tsc -b tsconfig.json",
    "prepack": "tsc -b tsconfig.json",
    "test": "ttsc -p tsconfig.test.json"
  }
}
